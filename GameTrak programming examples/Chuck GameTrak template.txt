
// name: gametra.ck
// desc: gametrak boilerplate example 

// author: Ge Wang (ge@ccrma.stanford.edu)
// date: summer 2014 

// z axis 
deadzone => float DEADZONE; 

// which joystick
0 => int device; 
// get from command line
if( me.args() ) me.arg(0) => Std.atoi => device;

// HID objects 
Hid trak; 
HidMsg msg; 

// open joystick 0, exit on fail 
if( !trak.openJoystick( device ) ) me.exit(); 

// print 
<<< "joystick '" + trak.name() + "' ready", "" >>>; 

// data structure for gametrak 
class GameTrak 
{ 
	// timestamps 
	time lastTime; 
	time currTime; 

	// previous axis data 
	float lastAxis[6]; 
	// current axis data 
	float axis[6]; 
} 


// gametrack 
GameTrak gt;

// spork control 
spork ~ gametrak();
// print
spork ~ print();

// main loop 
while( true ) { 
	100::ms => now; 
} 

// print 
fun void print() { 
	// time loop 
	while( true ) { 
		// values 
		<<< "axes:", gt.axis[0],gt.axis[1],gt.axis[2], gt.a; 
		// advance time 
		100::ms => now; 
	}
}

// gametrack handling 
fun void gametrak() { 
	while( true ) { 
		// wait on Hidln as event 
		trak => now; 

// messages received while( trak.recv( msg ) ) { 
// joystick axis motion if( msg.isAxisMotion() ) { 
// check which if( msg.which >= && msg.which < ) { 
} 
} 
// check if fresh if( now > gt.currTime ) { // time stamp gt.currTime => gt.lastTime; // set now => gt.currTime; } // save last gt.axis[msg.which] => gt.lastAxis[msg.w! // the z axes map to [0,1], others map I if( msg.which != - && msg.which != ) { msg.axisPosition => gt.axis[msg.which: else { 
} 
- ((msg.axisPosition + ) / ) - I if( gt.axis[msg.which] < ) => gi 
// joystick button down else if( msg.isButtonDown() ) { 
«< "button", msg.which, "down" >>>; 
} 


// joystick button up else if( msg.isButtonUp() ) { 
«< "button", msg.which, "up" >>>; 
\ 2 1,-Ii‘o ct t\, 
